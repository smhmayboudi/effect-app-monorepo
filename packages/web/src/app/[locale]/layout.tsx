import "../globals.css";
import type { Metadata } from "next";
import type { Product, WithContext } from "schema-dts";

import { GoogleTagManager } from "@next/third-parties/google";
import { NextIntlClientProvider } from "next-intl";
import { getLocale } from "next-intl/server";
import { Geist, Geist_Mono } from "next/font/google";
import { headers } from "next/headers";

import { Toaster } from "@/components/ui/sonner";
import { WebVitals } from "@/components/web-vitals";
import { DirectionProvider } from "@/context/direction-provider";
import { FontProvider } from "@/context/font-provider";
import { ThemeProvider } from "@/context/theme-provider";

const geistSans = Geist({
  subsets: ["latin"],
  variable: "--font-geist-sans",
});

const geistMono = Geist_Mono({
  subsets: ["latin"],
  variable: "--font-geist-mono",
});

export const metadata: Metadata = {
  description: "Generated by create next app",
  metadataBase: new URL("http://127.0.0.1:3002"),
  openGraph: {
    description: "Generated by create next app",
    images: "/opengraph-image",
    siteName: "Create Next App",
    title: "Create Next App",
  },
  title: "Create Next App",
  twitter: {
    card: "summary_large_image",
    description: "Generated by create next app",
    images: "/twitter-image",
    site: "Create Next App",
    title: "Create Next App",
  },
};

export default async function RootLayout({
  children,
}: LayoutProps<"/[locale]">) {
  const jsonLd: WithContext<Product> = {
    "@context": "https://schema.org",
    "@type": "Product",
    description: "Generated by create next app",
    image: "/icon",
    name: "Create Next App",
  };
  const locale = await getLocale();
  const nonce = (await headers()).get("x-nonce") ?? "";

  return (
    <html
      className="theme-default dark"
      dir="ltr"
      lang={locale}
      suppressHydrationWarning={true}
    >
      <body
        className={`antialiased theme-container ${geistSans.variable} ${geistMono.variable}`}
      >
        <DirectionProvider>
          <FontProvider>
            <ThemeProvider>
              <NextIntlClientProvider>
                {children}
                <Toaster
                  position={locale === "fa" ? "bottom-left" : "bottom-right"}
                />
              </NextIntlClientProvider>
            </ThemeProvider>
          </FontProvider>
        </DirectionProvider>
        <GoogleTagManager
          gtmId={process.env.NEXT_PUBLIC_GOOGLE_TAG_MANAGER_ID ?? ""}
          nonce={nonce}
        />
        <WebVitals />
        <script
          dangerouslySetInnerHTML={{
            __html: JSON.stringify(jsonLd).replace(/</g, "\\u003c"),
          }}
          type="application/ld+json"
        />
      </body>
    </html>
  );
}
